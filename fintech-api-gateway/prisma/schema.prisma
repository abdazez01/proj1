// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Use the appropriate provider for your database
  url      = env("DATABASE_URL") // Replace with your database connection string
}

model OCR {
  Report_ID Int      @id @default(autoincrement())
  Account   Account  @relation(fields: [Account_ID], references: [ID])
  Account_ID Int
  CSV_Path  String
}

model Account {
  ID         Int       @id @default(autoincrement())
  Email      String    @unique
  HashedPassword   String
  EmailVerified      Boolean  @default(false)
  AskForRecovery     Boolean  @default(false)
  VerificationCode   String?  // Store the code temporarily
  VerificationExpiry DateTime? // Expiry for the verification code
  RecoveryCode       String?  // Stores the recovery code
  RecoveryExpiry     DateTime? // Expiry for the recovery code
  OCRs       OCR[]
  Bonuse  Bonuses[]
  Expenses   Expense[]
  UserInfo   User_Info?
}

model Expense {
  Expense_ID   Int      @id @default(autoincrement())
  ExpenseName  String
  Price        Float
  createdAt    DateTime
  Account      Account  @relation(fields: [Account_ID], references: [ID])
  Account_ID   Int
  Category     String   @default("Other")
  Item_Count  Int   @default(1)
}

model User_Info {
  ID        Int     @id
  UserName  String  @default("USER")
  Age       Int
  Location  String
  Salary    Float
  Currency  String
  Gender    Boolean
  Account   Account @relation(fields: [ID], references: [ID])
}

model Bonuses{
  Bonus_ID   Int      @id @default(autoincrement())
  Amount  Float
  Created_AT  DateTime
  Account      Account  @relation(fields: [Account_ID], references: [ID])
  Account_ID   Int
}
